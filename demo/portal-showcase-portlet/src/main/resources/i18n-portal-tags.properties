bbcode=BBCode
creole=Creole
dom-events=DOM Events
nav-bar=Nav Bar
no-value-was-entered-for-the-non-required-captcha=No value was entered for the non-required captcha.
no-value-was-needed-for-the-no-captcha-recaptcha=No g-recaptcha-response value was needed for the "No Captcha reCAPTCHA".
no-value-was-needed-for-the-required-no-captcha-recaptcha=No g-recaptcha-response value was needed for the required "No Captcha reCAPTCHA".
portal-captcha=[javadoc:com.liferay.faces.portal.component.captcha.Captcha] is a [javadoc:javax.faces.component.UIInput] that renders Liferay Portal's captcha image and a field for editing *single-line text*. It provides built-in validation in order to make sure that the text value entered by the user matches the value in the captcha image.
portal-captcha-general=<p>The [vdldoc:portal:captcha:value] attribute can be *bound to a model bean property* via EL.</p>
portal-captcha-general-example-1=Captcha Implementation:
portal-captcha-header-note=<p>You can choose between *SimpleCaptcha* and *ReCaptcha* implementations by modifying the value of the `captcha.engine.impl` property in your portal-ext.properties file.</p><p>When running in Liferay Portal 7.0 (and above), an authenticated user will be considered trustworthy after entering a correct value a certain number of times, which is known as the maximum number of challenges. The maximum is defined by the `captcha.max.challenges` property in your portal-ext.properties file, which is `1` by default. When an authenticated user has gained the necessary level of trust, the Captcha will no longer be rendered (or required) for the remainder of the session. Non-authenticated users will never be considered trustworthy, and will always be required enter a correct value for the Captcha, provided that the value of the [vdldoc:portal:captcha:required] property is `true`.</p><p>For more information, see the default values in the "Captcha" section of Liferay Portal's <a href="https://github.com/liferay/liferay-portal/blob/7.0.3-ga4/portal-impl/src/portal.properties#L3723" target="_blank">portal.properties</a> file and <a href="https://issues.liferay.com/browse/LPS-40401" target="_blank">LPS-40401</a>.</p>
portal-header=[javadoc:com.liferay.faces.portal.component.header.Header] is a [javadoc:javax.faces.component.UIPanel] component that renders a `&lt;div&gt;` tag. Since it extends [javadoc:javax.faces.component.html.HtmlPanelGroup], it supports all the features of [vdldoc:h:panelGroup].
portal-header-general=The component is used to display header text by specifying the [vdldoc:portal:header:title] attribute. It can also display a clickable *back icon*.
portal-header-general-example-1=Specifying an internationalized key (provided by the portal) for the [vdldoc:portal:header:title] attribute.
portal-header-general-example-2=Specifying an EL expression for the [vdldoc:portal:header:title] attribute.
portal-header-general-example-3=Specifying the [vdldoc:portal:header:backLabel] and [vdldoc:portal:header:backURL] attributes to define the hyperlink for the back icon.
portal-inputrichtext=[javadoc:com.liferay.faces.portal.component.inputrichtext.InputRichText] is a [javadoc:javax.faces.component.UIInput] component that renders a field for editing rich text.
portal-inputrichtext-general=The general usage is to support authoring of rich text as *fragments of HTML*.
portal-inputrichtext-bbcode=Authoring of *BBCode* rich text is supported by specifying the [vdldoc:portal:inputRichText:editorKey] attribute with a Liferay Portal *property key* that has a value of `ckeditor_bbcode`.
portal-inputrichtext-creole=Authoring of *Creole* rich text is supported by specifying the [vdldoc:portal:inputRichText:editorKey] attribute with a Liferay Portal *property key* that has a value of `ckeditor_creole`.
portal-inputrichtext-default-value=A *default value* can specified using when the [vdldoc:portal:inputRichText:value] attribute is bound via EL to a model bean property.
portal-inputrichtext-dom-events=A subset of *DOM events* are supported including `onblur`, `onchange`, and `onfocus`.
portal-inputrichtext-immediate=When the [vdldoc:portal:inputRichText:immediate] attribute is `true`, the submitted value is converted and validated during *APPLY_REQUEST_VALUES* phase of the JSF lifecycle, rather than the normal PROCESS_VALIDATIONS phase.
portal-inputrichtext-instant-ajax=The component supports *instant Ajax* by simply adding an [vdldoc:f:ajax] child tag. Supported values for the [vdldoc:f:ajax] [vdldoc:f:ajax:event] attribute are `blur`, `focus`, and `valueChange` (the default).
portal-inputrichtext-validation=The [vdldoc:portal:inputRichText:minPlainTextChars] and [vdldoc:portal:inputRichText:maxPlainTextChars] attributes control the *minimum/maximum number of plain text characters*, meaning characters that do not include HTML tags such as `&lt;strong&gt;`, `&lt;em&gt;`, and `&lt;a href="..."&gt;`.
portal-inputrichtext-validation-example-1=Specifying `minPlainTextChars="10"` and `maxPlainTextChars="144"`
portal-inputsearch=[javadoc:com.liferay.faces.portal.component.inputsearch.InputSearch] is a [javadoc:javax.faces.component.UIInput] component that renders a text field and optional button for submitting search criteria.
portal-inputsearch-general=<p>The [vdldoc:portal:inputSearch:value] attribute can be *bound to a model bean property* via EL.</p><p>The [vdldoc:portal:inputSearch:buttonLabel] attribute controls the label of the button.</p><p>The [vdldoc:portal:inputSearch:placeholder] attribute (HTML5-only) controls the text of the hint that appears in the text field before the user enters a value.</p>
portal-inputsearch-instant-ajax=The component supports *instant Ajax* by simply adding an [vdldoc:f:ajax] child tag. The default event for [vdldoc:f:ajax] [vdldoc:f:ajax:event] attribute is `search` (when the search button is clicked).
portal-inputsearch-nav-bar=When specified as a grand-child of [vdldoc:portal:navBar] and a child of [vdldoc:portal:navBarSearch], the *responsive* layout feature for small/mobile displays causes the text field to appear in a popup menu.
portal-inputsearch-without-button=By specifying `showButton="false"`, the text field will appear by itself without a button.
portal-nav=[javadoc:com.liferay.faces.portal.component.nav.Nav] is a [javadoc:javax.faces.component.UIData] (iterator) component that renders a `&lt;ul&gt;...&lt;/ul&gt` (unordered) list. It is designed to be used in conjunction with [vdldoc:portal:navItem] child component tags.
portal-nav-data-model=Since it extends [javadoc:javax.faces.component.UIData], it can render list items *dynamically* when the [vdldoc:portal:navItem] content is set via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:portal:navItem:var] attribute can be used to introduce a variable name into the EL when iterating over the model.
portal-nav-general=Child [vdldoc:portal:navItem] child component tags are rendered as `&lt;li&gt;...&lt;/li&gt;` (list item) elements.
portal-nav-general-example-1=Default styling
portal-nav-general-example-2=Specifying `styleClass="nav-list"` and list item hyperlinked icons
portal-nav-nav-bar=When specified as a child of [vdldoc:portal:navBar], the *responsive* layout feature for small/mobile displays causes the *grand-child* [vdldoc:alloy:navItem] links to be displayed in a popup menu. This feature is enabled by default when a *child* [vdldoc:alloy:nav] component tag has [vdldoc:portal:nav:collapsible]=`true` (the default).
portal-nav-nav-bar-example-1=Responsive feature enabled for small/mobile displays
portal-permissionsurl=[javadoc:com.liferay.faces.portal.component.permissionsurl.PermissionsURL] is a [javadoc:javax.faces.component.UIOutput] component that generates a URL pointing to the Liferay Portal Permissions UI. If the [vdldoc:portal:permissionsURL:var] attribute is present, the component introduces a variable into the EL. Otherwise, the URL is written to the response.
portal-permissionsurl-general=Access the *Portlet Resource Permissions* by specifying the primary key of a portlet via the [vdldoc:portal:permissionsURL:resourcePrimKey] attribute, and optionally specifying [vdldoc:portal:permissionsURL:roleTypes] in order to control which roles are displayed in the Liferay Portal Permissions UI.
portal-permissionsurl-general-example-1=Introducing a [vdldoc:portal:permissionsURL:var] into the EL with default role types (Guest, Owner, Power User, Site Member, User)
portal-permissionsurl-general-example-2=Output directly to the response with specific role types (Guest, Owner, Power User, User)
portal-permissionsurl-note=*Note*: Liferay Portal has *three types of resources*, each having associated permissions:<ol><li>*Portlet Resource*: Permissions associated with the UI of the portlet, such as permission to `VIEW` the portlet.</li><li>*Top-Level Model Resource*: Permissions associated with the database entity itself, such as permission to `ADD` a row.</li><li>*Row-Level Model Resource*: Permissions associated with individual rows of the database entity, such as permission to `UPDATE` a row.</li></ol>
portal-permissionsurl-rowlevel=Access the *Row-Level Model Resource Permissions* by specifying the Fully-Qualified Class Name (FQCN) of the ServiceBuilder model via the [vdldoc:portal:permissionsURL:modelResource] attribute and the *primary key of the row* via the [vdldoc:portal:permissionsURL:resourcePrimKey] attribute.
portal-permissionsurl-toplevel=Access the *Top-Level Model Resource Permissions* by specifying the Fully-Qualified Class Name (FQCN) of the ServiceBuilder model via the [vdldoc:portal:permissionsURL:modelResource] attribute and the `groupId` (the ID of the Liferay Portal Site) via the [vdldoc:portal:permissionsURL:resourcePrimKey] attribute.
portal-permissionsurl-windowstate=The [vdldoc:portal:permissionsURL:windowState] attribute is used to control how the Liferay Portal Permissions UI should be displayed (typically in an `&lt;iframe&gt;` dialog). Valid values include: `maximized`, `pop_up`, and `exclusive`. The default value is `maximized`.
portal-permissionsurl-windowstate-example-1=Specifying `windowState="pop_up"`
portal-runtime=[javadoc:com.liferay.faces.portal.component.runtime.Runtime] is a [javadoc:javax.faces.component.UIPanel] component that *embeds the markup of a different portlet* within the current portlet.
portal-runtime-general=The general usage is to specify the embedded portlet by its name. The name of an out-of-the-box Liferay portlet can be determined by examining the `portlet-name` element of the portal's <a href="https://github.com/liferay/liferay-portal/tree/6.2.2-ga3/portal-web/docroot/WEB-INF/liferay-portlet.xml#L24" target="_blank">liferay-portlet.xml</a> descriptor.
portal-runtime-multiple-instances=Multiple instances can be specified by appending `_INSTANCE_` and a unique suffix to the value of the [vdldoc:portal:runtime:portletName] attribute. The portlet must have `&lt;instanceable&gt;true&lt;/instanceable&gt;` in the liferay-portlet.xml descriptor in order to support multiple instances.
recaptcha-verification-failed=reCAPTCHA verification failed.
rowlevel=Row-Level
the-captcha-is-no-longer-enabled-since-the-user-entered-a-correct-value-x-times=The captcha is no longer enabled since the user entered a correct value {0} times.
toplevel=Top-Level
you-entered-the-correct-text-verification-code=You entered the correct text verification code.
windowstate=Window State